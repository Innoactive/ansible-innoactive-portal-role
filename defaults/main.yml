---
# Docker Registry to pull images from
registry_hostname: registry.docker.innoactive.de
registry_username:
registry_password:

docker_registry:
  hostname: "{{ registry_hostname }}"
  username: "{{ registry_username }}"
  password: "{{ registry_password }}"

# Main Portal Backend Configuration parameters
admin_hostname:
admin_alias_hostnames: []
secret_key:
from_email:
admin_email:
admin_password:
create_admin_user: true
setup_database: true
setup_control_panel: "{{ setup_wmc | default(True) }}"
setup_portal_frontend: "{{ setup_discovery_portal | default(True) }}"
setup_customization_service: true
# Error Tracking configuration
sentry_dsn:
# Google Analytics configuration
google_analytics_tracking_id:
extra_environment_variables: {}
extra_volumes: []

# Secure Communications (SSL / TLS)
letsencrypt: true
letsencrypt_test: false

# Traefik settings
traefik_dashboard: false
traefik_extra_config_path: /etc/hub/traefik
traefik_docker_extra_config_path: /custom_config
traefik_enable_tls: true
traefik_certificate_resolver: lets-encrypt
traefik_extra_env_vars: {}
traefik_extra_labels: {}

traefik:
  dashboard: "{{ traefik_dashboard }}"
  extra_config_path: "{{ traefik_extra_config_path }}"
  docker_extra_config_path: "{{ traefik_docker_extra_config_path }}"
  enable_tls: "{{ traefik_enable_tls }}"
  enable_lets_encrypt: "{{ letsencrypt }}"
  enable_lets_encrypt_test: "{{ letsencrypt_test }}"
  certificate_resolver: "{{ traefik_enable_tls | ternary(traefik_certificate_resolver, '') }}"
  extra_env_vars: "{{ traefik_extra_env_vars }}"
  extra_labels: "{{ traefik_extra_labels }}"

# Docker Image Versions
# legacy parameter for portal_backend_image_version is hub_image_version
portal_backend_image_version: "{{ hub_image_version | default('latest') }}"
portal_image_version: latest
reverse_proxy_image_version: 2.2
session_management_image_version: latest
cloudxr_management_image_version: latest
customization_image_version: latest

mailserver_image: namshi/smtp:latest
message_queue_image: redis:5
database_image: postgres:9.6
# legacy parameter to specify portal backend image is hub_image. Defaults to registry.docker.innoactive.de/portal_backend:latest
portal_backend_image: registry.docker.innoactive.de/{{ hub_image | default('portal_backend') }}:{{ portal_backend_image_version }}
portal_image: registry.docker.innoactive.de/portal_frontend:{{ portal_image_version }}
reverse_proxy_image: traefik:{{ reverse_proxy_image_version }}
customization_image: registry.docker.innoactive.de/hub_customization:{{ customization_image_version }}
session_management_image: registry.docker.innoactive.de/session_management:{{ session_management_image_version }}
cloudxr_management_image: registry.docker.innoactive.de/cloudxr-management:{{ cloudxr_management_image_version }}

image_versions:
  mailserver: "{{ mailserver_image }}"
  message_queue: "{{ message_queue_image }}"
  database: "{{ database_image }}"
  portal_backend: "{{ portal_backend_image }}"
  portal: "{{ portal_image }}"
  reverse_proxy: "{{ reverse_proxy_image }}"
  customization: "{{ customization_image }}"
  session_management: "{{ session_management_image }}"
  cloudxr_management: "{{ cloudxr_management_image }}"

admin_configuration:
  hostname: "{{ admin_hostname }}"
  alias_hostnames: "{{ admin_alias_hostnames | trim }}"
  secret_key: "{{ secret_key }}"
  from_email: "{{ from_email }}"
  admin_email: "{{ admin_email }}"
  admin_password: "{{ admin_password }}"
  setup_database: "{{ setup_database }}"
  setup_control_panel: "{{ setup_control_panel }}"
  setup_portal_frontend: "{{ setup_portal_frontend }}"
  setup_customization_service: "{{ setup_customization_service }}"
  google_analytics_id: "{{ google_analytics_tracking_id }}"
  sentry_dsn: "{{ sentry_dsn }}"
  protocol: "{{ 'https' if traefik.enable_tls else 'http' }}"
  create_admin_user: "{{ create_admin_user }}"
  extra_environment_variables: "{{ extra_environment_variables }}"
  extra_volumes: "{{ extra_volumes }}"

# Portal Configuration
portal_hostname:
portal_alias_hostnames: []
portal_oauth_client_id:
portal_sentry_dsn:
portal_signaling_service: ""
portal_extra_environment_variables: {}

portal_configuration:
  hostname: "{{ portal_hostname }}"
  alias_hostnames: "{{ portal_alias_hostnames | trim }}"
  oauth2_client_id: "{{ portal_oauth_client_id }}"
  sentry_dsn: "{{ portal_sentry_dsn }}"
  extra_environment_variables: "{{ portal_extra_environment_variables }}"
  signaling_service: "{{ portal_signaling_service | default('wss://' + portal_hostname, true) }}"

# CloudXR Management Service
cloudxr_enabled:
cloudxr_log_level:
cloudxr_environment:
cloudxr_management_sentry_dsn:
cloudxr_instance:
cloudxr_azure_enabled:
cloudxr_azure_client_id:
cloudxr_azure_secret:
cloudxr_azure_subscription:
cloudxr_azure_tenant_id:
cloudxr_azure_instance:

cloudxr_aws_enabled:
cloudxr_aws_access_key_id:
cloudxr_aws_secret_access_key:
cloudxr_aws_instance:

cloudxr_configuration:
  environment: "{{ cloudxr_environment  }}"
  log_level: "{{ cloudxr_log_level }}"
  enabled: "{{ cloudxr_enabled }}"
  sentry_dsn: "{{ cloudxr_management_sentry_dsn }}"

  azure_enabled: "{{ cloudxr_azure_enabled | default(false) }}"
  azure_client_id: "{{ cloudxr_azure_client_id | default('', true) }}"
  azure_client_secret: "{{ cloudxr_azure_secret | default('', true) }}"
  azure_subscription: "{{ cloudxr_azure_subscription | default('', true) }}"
  azure_tenant_id: "{{ cloudxr_azure_tenant_id | default('', true) }}"
  azure_instance: "{{ cloudxr_azure_instance | default(cloudxr_instance, true) }}"
  aws_enabled: "{{ cloudxr_aws_enabled | default(false) }}"
  aws_access_key_id: "{{ cloudxr_aws_access_key_id | default('', true) }}"
  aws_secret_access_key: "{{ cloudxr_aws_secret_access_key | default('', true) }}"
  aws_instance: "{{ cloudxr_aws_instance | default(cloudxr_instance, true) }}"

# Session Management service
session_management_hostname:
session_management_sentry_dsn:
session_management_environment:
session_management_log_level:
session_management_cors_origin:
session_management_oauth_client_id:
session_management_oauth_client_secret:
session_management_ip_stack_api_token:
session_management_adaptive_instance_scaling_enabled:
session_management_adaptive_instance_scaling_user_scale_ratio:
session_management_adaptive_instance_scaling_max_instances_per_region:
session_management_adaptive_instance_scaling_connection_is_idle_after_min:

session_management_configuration:
  hostname: "{{ session_management_hostname }}"
  sentry_dsn: "{{ session_management_sentry_dsn }}"
  oauth2_client_id: "{{ session_management_oauth_client_id }}"
  oauth2_client_secret: "{{ session_management_oauth_client_secret }}"
  environment: "{{ session_management_environment  }}"
  log_level: "{{ session_management_log_level }}"
  cors_origins: "{{ session_management_cors_origin }}"
  ip_stack_api_token: "{{ session_management_ip_stack_api_token }}"
  adaptive_instance_scaling:
    enabled: "{{ session_management_adaptive_instance_scaling_enabled | default(true) }}"
    user_scale_ratio: "{{ session_management_adaptive_instance_scaling_user_scale_ratio | default(1, true) }}"
    max_instances_per_region: "{{ session_management_adaptive_instance_scaling_max_instances_per_region | default(5, true) }}"
    connection_is_idle_after_min: "{{ session_management_adaptive_instance_scaling_connection_is_idle_after_min| default(15, true) }}"

# Standalone Configuration
vr_standalone_client_oauth2_client_id:
vr_standalone_client_oauth2_client_secret:

vr_standalone_client:
  oauth2_client_id: "{{ vr_standalone_client_oauth2_client_id }}"
  oauth2_client_secret: "{{ vr_standalone_client_oauth2_client_secret }}"

# Desktop Client Configuration
# legacy parameter for desktop_client_oauth2_client_id is launcher_oauth_client_id
desktop_client_oauth2_client_id: "{{ launcher_oauth_client_id | default(None) }}"
# legacy parameter for desktop_client_oauth2_client_secret is launcher_oauth_client_secret
desktop_client_oauth2_client_secret: "{{ launcher_oauth_client_secret | default(None) }}"

desktop_client_remote_oauth2_client_id:
desktop_client_remote_oauth2_client_secret:

desktop_client_configuration:
  oauth2_client_id: "{{ desktop_client_oauth2_client_id }}"
  oauth2_client_secret: "{{ desktop_client_oauth2_client_secret }}"
  remote_oauth2_client_id: "{{ desktop_client_remote_oauth2_client_id }}"
  remote_oauth2_client_secret: "{{ desktop_client_remote_oauth2_client_secret }}"

# Customization Configuration
customization_hostname:
customization_alias_hostnames: []
customization_oauth_client_id:
customization_oauth_client_secret:
customization_extra_environment_variables: {}

customization_configuration:
  hostname: "{{ customization_hostname }}"
  alias_hostnames: "{{ customization_alias_hostnames | trim }}"
  oauth2_client_id: "{{ customization_oauth_client_id }}"
  oauth2_client_secret: "{{ customization_oauth_client_secret }}"
  extra_environment_variables: "{{ customization_extra_environment_variables }}"

# Mail Configuration
smtp_host:
smtp_port:
smtp_user:
smtp_password:
smtp_use_tls: no
smtp_use_ssl: no

mail_configuration:
  smtp:
    host: "{{ smtp_host }}"
    port: "{{ smtp_port }}"
    user: "{{ smtp_user }}"
    password: "{{ smtp_password }}"
    use_tls: "{{ smtp_use_tls }}"
    use_ssl: "{{ smtp_use_ssl }}"

# defaults file for hub
service_prefix: hub

# Mount options
media_volume_mount:
  cifs:
    url:
    username:
    password:
  device:
    path:
  local:
    path:

volume_names:
  media: "{{ service_prefix }}_media"
  customization: "{{ service_prefix }}_customization_media"
  database: "{{ service_prefix }}_database"
  message_queue: "{{ service_prefix }}_message_queue"
  tls_certificates: "{{ service_prefix }}_tls_certificates"

network_names:
  main: "{{ service_prefix }}_network"

container_names:
  backend: "{{ service_prefix }}_web"
  realtime: "{{ service_prefix }}_channels"
  database: "{{ service_prefix }}_db"
  message_queue: "{{ service_prefix }}_mq"
  mailserver: "{{ service_prefix }}_mailer"
  reverse_proxy: "{{ service_prefix }}_traefik"
  portal_frontend: "{{ service_prefix }}_frontend"
  customization: "{{ service_prefix }}_customization"
  cloudxr_management: "{{ service_prefix }}_cloudxr_management"
  session_management: "{{ service_prefix }}_session_management"

# Calculated defaults
portal_backend_version: "{{ (image_versions.portal_backend | default(':', True)).split(':') | last | string }}"
portal_backend_version_is_latest: "{{ portal_backend_version.startswith('latest') }}"
portal_version: "{{ (image_versions.portal | default(':', True)).split(':') | last | string }}"
portal_version_is_latest: "{{ portal_version.startswith('latest') }}"
customization_service_version: "{{ (image_versions.customization | default(':', True)).split(':') | last | string }}"
customization_service_version_is_latest: "{{ customization_service_version.startswith('latest') }}"

# Signalling Proxy Settings
signalling_proxy_configuration_path: /etc/portal/signalling
