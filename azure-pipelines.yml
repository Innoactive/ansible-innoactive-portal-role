trigger:
  - develop
  - master

pr:
  branches:
    include:
      - develop

stages:
  - stage: Lint
    displayName: Lint
    jobs:
      - job: lint
        displayName: Lint Commits
        pool:
          vmImage: "ubuntu-18.04"
        steps:
          - script: |
                npm install @commitlint/cli commitlint-azure-pipelines-cli @commitlint/config-conventional
                npx \
                -p @commitlint/cli \
                -p commitlint-azure-pipelines-cli \
                -p @commitlint/config-conventional \
                commitlint-azure-pipelines --config .commitlintrc.json

  - stage: Integration
    jobs:
      - job: test
        displayName: Test
        pool:
          vmImage: "ubuntu-18.04"
        steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.7"
              addToPath: true
              architecture: "x64"

          - task: Bash@3
            displayName: Install Pipenv
            inputs:
              targetType: "inline"
              script: "pip install pipenv"

          - task: Bash@3
            displayName: pipenv version
            inputs:
              targetType: "inline"
              script: "pipenv --version"

          - task: Bash@3
            displayName: "Install pipenv dependencies"
            inputs:
              targetType: "inline"
              script: "pipenv install --system"

          - task: Bash@3
            displayName: "Molecule test"
            inputs:
              targetType: "inline"
              script: "molecule test"
            env:
              DOCKER_REGISTRY_USERNAME: $(DOCKER_REGISTRY_USERNAME)
              DOCKER_REGISTRY_PASSWORD: $(DOCKER_REGISTRY_PASSWORD)
              HCLOUD_TOKEN: $(HCLOUD_TOKEN)

          - task: Bash@3
            displayName: "Test saas"
            inputs:
              targetType: "inline"
              script: "molecule test -s saas"
            env:
              DOCKER_REGISTRY_USERNAME: $(DOCKER_REGISTRY_USERNAME)
              DOCKER_REGISTRY_PASSWORD: $(DOCKER_REGISTRY_PASSWORD)
              HCLOUD_TOKEN: $(HCLOUD_TOKEN)

          - task: Bash@3
            displayName: "Test with cifs"
            inputs:
              targetType: "inline"
              script: "molecule test -s with_cifs"
            env:
              DOCKER_REGISTRY_USERNAME: $(DOCKER_REGISTRY_USERNAME)
              DOCKER_REGISTRY_PASSWORD: $(DOCKER_REGISTRY_PASSWORD)
              HCLOUD_TOKEN: $(HCLOUD_TOKEN)

  - stage: Release
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
    jobs:
      - job: release
        displayName: Release
        steps:
          - script: |
              npx \
              -p semantic-release \
              -p semantic-release-ado \
              semantic-release
            env: { GH_TOKEN: $(GH_TOKEN) }
            displayName: "Semantic release"
