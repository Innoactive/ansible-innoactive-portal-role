trigger:
  - develop
  - master

pr:
  branches:
    include:
      - develop

pool:
  vmImage: "ubuntu-latest"

parameters:
  - name: scenarios
    type: object
    default:
      - default
      - saas
      - with_cifs

stages:
  - stage: Lint
    displayName: Lint
    jobs:
      - job: lint
        displayName: Lint Commits
        steps:
          - script: |
              npm install @commitlint/cli commitlint-azure-pipelines-cli @commitlint/config-conventional
              npx \
              -p @commitlint/cli \
              -p commitlint-azure-pipelines-cli \
              -p @commitlint/config-conventional \
              commitlint-azure-pipelines --config .commitlintrc.json

  - stage: Integration
    jobs:
      - job: test
        displayName: Test
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.9"
              addToPath: true

          - task: Bash@3
            displayName: Install Pipenv
            inputs:
              targetType: "inline"
              script: "pip install pipenv"

          - task: Bash@3
            displayName: pipenv version
            inputs:
              targetType: "inline"
              script: "pipenv --version"

          - task: Bash@3
            displayName: "Install pipenv dependencies"
            inputs:
              targetType: "inline"
              script: "pipenv sync --system --dev"

          - ${{ each scenario in parameters.scenarios }}:
              - task: Bash@3
                displayName: Molecule Tests (${{ scenario }})
                inputs:
                  targetType: "inline"
                  script: molecule test -s ${{ scenario }}
                env:
                  DOCKER_REGISTRY_USERNAME: $(DOCKER_REGISTRY_USERNAME)
                  DOCKER_REGISTRY_PASSWORD: $(DOCKER_REGISTRY_PASSWORD)
                  HCLOUD_TOKEN: $(HCLOUD_TOKEN)
                  INSTANCE_NAME_SUFFIX: $(Build.BuildId)
                  PY_COLORS: "1"
                  ANSIBLE_FORCE_COLOR: "1"

  - stage: Release
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
    jobs:
      - job: release
        displayName: Release
        steps:
          - script: |
              npx \
              -p semantic-release \
              -p semantic-release-ado \
              semantic-release
            env: { GH_TOKEN: $(GH_TOKEN) }
            displayName: "Semantic release"
