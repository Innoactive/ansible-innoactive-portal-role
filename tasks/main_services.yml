---
- name: Start Django Application Server
  docker_container:
    name: "{{ container_names.main }}"
    image: "{{ image_versions.hub }}"
    restart_policy: unless-stopped
    exposed_ports:
      - "8000"
    volumes:
      - "{{ volume_names.media }}:/media"
      - "{{ volume_names.static }}:/static"
    env: &webservice_env
      # yamllint disable rule:line-length
      VIRTUAL_PORT: "8000"
      VIRTUAL_PROTO: uwsgi
      VIRTUAL_HOST: "{{ hub_configuration.hostname | mandatory }}"
      DJANGO_ALLOWED_HOSTS: "{{ hub_configuration.hostname | mandatory }}"
      DJANGO_SECRET_KEY: "{{ hub_configuration.secret_key | mandatory }}"
      FROM_EMAIL: "{{ hub_configuration.admin_email | mandatory }}"
      LETSENCRYPT_HOST: "{{ hub_configuration.hostname | mandatory }}"
      RAVEN_DSN: "{{ hub_configuration.sentry_dsn | default('') }}"
      GOOGLE_ANALYTICS_TRACKING_ID: "{{ hub_configuration.google_analytics_tracking_id | default('') }}"
      # yamllint enable rule:line-length
    command: supervisord -n -c /etc/supervisor/conf.d/supervisord.django.conf
    networks_cli_compatible: true
    networks:
      - name: "{{ network_names.main }}"
        aliases:
          - web

- name: Start Django Realtime Application Server
  docker_container:
    name: "{{ container_names.realtime }}"
    image: "{{ image_versions.hub }}"
    restart_policy: unless-stopped
    exposed_ports:
      - "8000"
    volumes:
      - "{{ volume_names.media }}:/media"
      - "{{ volume_names.static }}:/static"
    env:
      # yamllint disable rule:line-length
      VIRTUAL_PORT: "8000"
      VIRTUAL_HOST: channels
      # channels cannot work via uwsgi, it needs http
      VIRTUAL_PROTO: http
      NETWORK_ACCESS: internal
      DJANGO_ALLOWED_HOSTS: "{{ hub_configuration.hostname | mandatory }}"
      DJANGO_SECRET_KEY: "{{ hub_configuration.secret_key | mandatory }}"
      FROM_EMAIL: "{{ hub_configuration.admin_email | mandatory }}"
      LETSENCRYPT_HOST: "{{ hub_configuration.hostname | mandatory }}"
      RAVEN_DSN: "{{ hub_configuration.sentry_dsn | default('') }}"
      GOOGLE_ANALYTICS_TRACKING_ID: "{{ hub_configuration.google_analytics_tracking_id | default('') }}"
      # yamllint enable rule:line-length
    command: supervisord -n -c /etc/supervisor/conf.d/supervisord.channels.conf
    networks_cli_compatible: true
    networks:
      - name: "{{ network_names.main }}"
        aliases:
          - channels

- name: Run Database Migrations
  become: true
  command: "docker exec {{ container_names.main }} python manage.py migrate"
  register: migration_result
  changed_when: '"Applying " in migration_result.stdout'
  when: hub_configuration.setup_database
  tags:
    - setup_tasks

- name: Collect static files for WMC
  become: true
  # yamllint disable rule:line-length
  command: "docker exec {{ container_names.main }} python manage.py collectstatic -v 0 -c --no-input"
  # yamllint enable rule:line-length
  when: hub_configuration.setup_wmc
  # TODO: technically, this is not correct, it should only be changed if no files are collected
  changed_when: false
  tags:
    - setup_tasks
