import json

from oauth2_provider.models import get_application_model

# get or create an oauth client
ClientModel = get_application_model()

created = False
oauth_client = None

authorization_grant_type = ClientModel.GRANT_AUTHORIZATION_CODE
{% if authorization_type %}
if '{{ authorization_type }}' == "GRANT_DEVICE_AUTH":
    authorization_grant_type=ClientModel.GRANT_DEVICE_AUTH
elif '{{ authorization_type }}' == "GRANT_TOKEN_EXCHANGE":
    authorization_grant_type=ClientModel.GRANT_TOKEN_EXCHANGE
{% endif %}

{% if client_id %}
if ClientModel.objects.filter(client_id='{{ client_id }}').exists() is False:
    oauth_client = ClientModel.objects.create(name='{{ client_name }}',
        client_id='{{ client_id }}',
        {% if client_secret %}client_secret='{{ client_secret }}', {% endif %}
        authorization_grant_type=authorization_grant_type,
        skip_authorization=True)
    created = True
else:
    oauth_client = ClientModel.objects.get(client_id='{{ client_id }}')
{% endif %}

if not oauth_client:
    if ClientModel.objects.filter(name='{{ client_name }}').exists() is False:
        oauth_client = ClientModel.objects.create(name='{{ client_name }}',
            {% if client_id %}client_id='{{ client_id }}', {% endif %}
            {% if client_secret %}client_secret='{{ client_secret }}', {% endif %}
            authorization_grant_type=authorization_grant_type,
            skip_authorization=True)
        created = True
    else:
        oauth_client = ClientModel.objects.get(name='{{ client_name }}')

# make sure all specified redirect uris are registered for the oauth client
current_redirect_uris = oauth_client.redirect_uris.splitlines()
updated = False
{% if redirect_uris %}
{% for redirect_uri  in redirect_uris %}
expected_redirect_uri = '{{ redirect_uri }}'
if expected_redirect_uri not in current_redirect_uris:
    current_redirect_uris.append(expected_redirect_uri)
    updated = True
{% endfor %}
{% endif %}

{% if authorization_type %}
if oauth_client.authorization_grant_type != authorization_grant_type:
    updated = True
    oauth_client.authorization_grant_type = authorization_grant_type
{% endif %}

if oauth_client.name != '{{ client_name }}':
    oauth_client.name = '{{ client_name }}'
    updated = True

if updated:
    oauth_client.redirect_uris = '\r\n'.join(current_redirect_uris)
    oauth_client.save(update_fields=['redirect_uris', 'authorization_grant_type', 'name'])

print(json.dumps({
    "changed": created or updated,
    "client_id": oauth_client.client_id,
    "client_secret": oauth_client.client_secret
}))
